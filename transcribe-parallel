#!/bin/bash
# Wrapper script for the transcribe tool with parallel processing enabled
# This script automatically enables parallel processing for both transcription
# and post-processing for improved performance.

set -euo pipefail

# Determine the script directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Add the parent directory to PYTHONPATH to ensure module can be found
export PYTHONPATH="${SCRIPT_DIR}:${PYTHONPATH:-}"

# Determine CPU count for optimal worker configuration
CPU_COUNT=$(nproc)
WORKER_COUNT=$((CPU_COUNT / 2))  # Use half the CPUs for transcription by default
PARALLEL_WORKER_COUNT=$((CPU_COUNT / 2))  # Use the other half for post-processing

# Ensure at least 2 workers for each
WORKER_COUNT=$((WORKER_COUNT > 2 ? WORKER_COUNT : 2))
PARALLEL_WORKER_COUNT=$((PARALLEL_WORKER_COUNT > 2 ? PARALLEL_WORKER_COUNT : 2))

echo "Using $WORKER_COUNT workers for transcription and $PARALLEL_WORKER_COUNT workers for post-processing"

# Forward all arguments plus the parallel processing flags
exec python3 -m transcribe_pkg \
  --parallel \
  --max-workers "$WORKER_COUNT" \
  --max-parallel-workers "$PARALLEL_WORKER_COUNT" \
  "$@"

#fin